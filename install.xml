<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2017-present, Facebook, Inc. -->
<!-- All rights reserved. -->

<!-- This source code is licensed under the license found in the -->
<!-- LICENSE file in the root directory of this source tree. -->

<!-- system auto generated, DO NOT MODIFY. -->
<modification>
	<name>Facebook Ads Extension</name>
	<code>facebook_ads_extension</code>
	<version>2.1.3</version>
	<author>Facebook</author>
	<link></link>

  <!-- Admin panel settings -->
  <file path="admin/controller/common/column_left.php">
    <operation>
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        $token = (isset($this->session->data['user_token']))
          ? $this->session->data['user_token']
          : $this->session->data['token'];
        $tokenString = 'token=' . $token . '&user_token=' . $token;
        $facebookAdsExtension = array();
        $facebookAdsExtension[] = array(
          'name'     => 'Facebook Ads Extension',
          'href'     => $this->url->link('extension/facebookadsextension', $tokenString, true),
          'children' => array()
        );

        $data['menus'][] = array(
          'id'       => 'menu-facebook-ads-extension',
          'icon'     => 'fa-facebook-square',
          'name'     => 'Facebook Ads Extension',
          'href'     => '',
          'children' => $facebookAdsExtension
        );
      ]]></add>
    </operation>
  </file>

  <!-- Admin dashboard settings -->
  <file path="admin/controller/common/dashboard.php">
    <operation>
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        $this->load->language('common/dashboard');
        try {
          $operation = ', dashboard module';

          // validates the plugin
          $all_error_messages = $this->load->controller(
            'extension/facebookadsextension/validate');
          if (sizeof($all_error_messages) > 0) {
            throw new Exception($this->language->get(
              'text_warning_facebook_fae_install_problem'));
          }

          $this->load->controller(
            'extension/facebookproduct/validateFAEAndCatalogSetupAndProductUploadComplete',
            $operation);

          $hasNewUpgradeAvailable = $this->load->controller(
            'extension/facebookadsextension/hasNewUpgradeAvailable',
            $operation);
          $data['plugin_upgrade_message'] = ($hasNewUpgradeAvailable)
            ? FacebookCommonUtils::PLUGIN_UPGRADE_MESSAGE
            : '';
        } catch (Exception $e) {
          $data['error_facebook_sync'] =
            ($e->getCode() === FacebookGraphAPIError::ACCESS_TOKEN_EXCEPTION_CODE)
            ? $this->language->get('text_warning_facebook_access_token_problem')
            : $e->getMessage();
        }
      ]]></add>
    </operation>
  </file>

  <file path="admin/view/template/common/dashboard.tpl">
    <operation>
      <search><![CDATA[<?php if ($error_install) { ?>]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($error_facebook_sync) && !!($error_facebook_sync)) {?>
        <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> <?= $error_facebook_sync; ?>
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        <?php } ?>
        <?php if (isset($plugin_upgrade_message) && !!($plugin_upgrade_message)) {?>
        <div class="alert alert-info"><i class="fa fa-exclamation-circle"></i> <?= $plugin_upgrade_message; ?>
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        <?php } ?>
      ]]></add>
    </operation>
  </file>

  <!-- For opencart v2.x and not v2.3.x, -->
  <!-- the method of displaying the functions on menu sidebar of admin panel -->
  <!-- is via explicit hardcoding on the menu controller and template -->
  <!-- This code insertion is to handle for v2.x and not v2.3.x -->
  <!-- by explicitly adding FAE to menu controller and template -->
  <!-- In v2.3.x, there are no menu.php and menu.tpl files -->

  <!-- Seach syntax for opencart v2.2.0.0 and below -->
  <file path="admin/controller/common/menu.php">
    <operation>
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        $token = (isset($this->session->data['user_token']))
          ? $this->session->data['user_token']
          : $this->session->data['token'];
        $tokenString = 'token=' . $token . '&user_token=' . $token;
        $data['text_facebook_ads_extension'] = 'Facebook Ads Extension';
        $data['facebookadsextension'] = $this->url->link('extension/facebookadsextension', $tokenString, 'SSL');
      ]]></add>
    </operation>
  </file>

  <file path="admin/view/template/common/menu.tpl">
    <operation>
      <search><![CDATA[<ul id="menu">]]></search>
      <add position="after"><![CDATA[
        <li id="facebookadsextension"><a class="parent"><i class="fa fa-facebook-square fa-fw"></i> <span><?= $text_facebook_ads_extension; ?></span></a>
          <ul>
            <li>
              <a href="<?= $facebookadsextension; ?>">
                <?= $text_facebook_ads_extension; ?>
              </a>
            </li>
          </ul>
        </li>
      ]]></add>
    </operation>
  </file>

  <file path="admin/model/catalog/product.php">
    <!-- This operation is to store in the new product id -->
    <!-- in the request->post variable. -->
    <!-- Using this new product id, we can then access from -->
    <!-- the controller and sync it with facebook catalog -->
    <operation>
      <search><![CDATA[return $product_id;]]></search>
      <add position="before"><![CDATA[
        $this->request->post['facebook_id_of_new_product'] = $product_id;
      ]]></add>
    </operation>
  </file>

  <file path="admin/controller/catalog/product.php">
    <operation>
      <!-- We want to provide feedback to merchant on their FAE status -->
      <!-- when they access the product management module entry screen-->
      <!-- The feedback could be either FAE not setup or  -->
      <!-- a problem with the FAE setup -->
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        $this->load->language('catalog/product');
        try {
          $operation = ', access product module';

          // validates the plugin
          $all_error_messages = $this->load->controller(
            'extension/facebookadsextension/validate');
          if (sizeof($all_error_messages) > 0) {
            throw new Exception($this->language->get(
              'text_warning_facebook_fae_install_problem'));
          }

          $this->load->controller(
            'extension/facebookproduct/validateFAEAndCatalogSetupAndProductUploadComplete',
            $operation);

          $hasNewUpgradeAvailable = $this->load->controller(
            'extension/facebookadsextension/hasNewUpgradeAvailable',
            $operation);
          $this->session->data['plugin_upgrade_message'] = ($hasNewUpgradeAvailable)
            ? FacebookCommonUtils::PLUGIN_UPGRADE_MESSAGE
            : '';
        } catch (Exception $e) {
          $this->session->data['error_facebook_sync'] =
            ($e->getCode() === FacebookGraphAPIError::ACCESS_TOKEN_EXCEPTION_CODE)
            ? $this->language->get('text_warning_facebook_access_token_problem')
            : $e->getMessage();
        }
      ]]></add>
    </operation>

    <operation>
      <!-- We need to retrieve out the new product id after it is -->
      <!-- created in the database. Although the addProduct method -->
      <!-- returns the product_id, but the default Opencart code -->
      <!-- does not read in the return product_id -->
      <!-- As it is riskier if to modify and replace original base codes, -->
      <!-- the approach is to use the request->post variable to pass back -->
      <!-- the new product id from model to controller -->
      <search><![CDATA[$this->model_catalog_product->addProduct($this->request->post);]]></search>
      <add position="after"><![CDATA[
        try {
          $product_id = $this->request->post['facebook_id_of_new_product'];
          $result = $this->load->controller(
            'extension/facebookproduct/syncProductForProductId',
            $product_id);
          if (!isset($result['success_count'])
            || $result['success_count'] !== $result['total_count']) {
            $this->session->data['error_facebook_sync'] =
              $this->language->get('text_warning_facebook_sync');
          }
        } catch (Exception $e) {
          $this->load->language('catalog/product');
          $this->session->data['error_facebook_sync'] =
            ($e->getCode() === FacebookGraphAPIError::ACCESS_TOKEN_EXCEPTION_CODE)
            ? $this->language->get('text_warning_facebook_access_token_problem')
            : $e->getMessage();
        }
      ]]></add>
    </operation>

    <operation>
      <search><![CDATA[$this->model_catalog_product->editProduct($this->request->get['product_id'], $this->request->post);]]></search>
      <add position="after"><![CDATA[
        try {
          $result = $this->load->controller(
            'extension/facebookproduct/syncProductForProductId',
            $this->request->get['product_id']);
          if (!isset($result['success_count'])
            || $result['success_count'] !== $result['total_count']) {
            $this->session->data['error_facebook_sync'] =
              $this->language->get('text_warning_facebook_sync');
          }
        } catch (Exception $e) {
          $this->load->language('catalog/product');
          $this->session->data['error_facebook_sync'] =
            ($e->getCode() === FacebookGraphAPIError::ACCESS_TOKEN_EXCEPTION_CODE)
            ? $this->language->get('text_warning_facebook_access_token_problem')
            : $e->getMessage();
        }
      ]]></add>
    </operation>

    <operation>
      <search><![CDATA[if (isset($this->request->post['selected']) && $this->validateDelete()) {]]></search>
      <add position="after"><![CDATA[
        try {
          $result = $this->load->controller(
            'extension/facebookproduct/deleteProductsForProductId',
            $this->request->post['selected']);
          if (!isset($result['success_count'])
            || $result['success_count'] !== $result['total_count']) {
            $this->session->data['error_facebook_sync'] =
              $this->language->get('text_warning_facebook_sync');
          }
        } catch (Exception $e) {
          $this->load->language('catalog/product');
          $this->session->data['error_facebook_sync'] =
            ($e->getCode() === FacebookGraphAPIError::ACCESS_TOKEN_EXCEPTION_CODE)
            ? $this->language->get('text_warning_facebook_access_token_problem')
            : $e->getMessage();
        }
      ]]></add>
    </operation>

    <operation>
      <search><![CDATA[protected function getList() {]]></search>
      <add position="after"><![CDATA[
        if (isset($this->session->data['error_facebook_sync'])) {
          $data['error_facebook_sync'] = $this->session->data['error_facebook_sync'];
          unset($this->session->data['error_facebook_sync']);
        } else {
          $data['error_facebook_sync'] = '';
        }

        if (isset($this->session->data['error_facebook_delete'])) {
          $data['error_facebook_delete'] = $this->session->data['error_facebook_delete'];
          unset($this->session->data['error_facebook_delete']);
        } else {
          $data['error_facebook_delete'] = '';
        }

        if (isset($this->session->data['plugin_upgrade_message'])) {
          $data['plugin_upgrade_message'] = $this->session->data['plugin_upgrade_message'];
          unset($this->session->data['plugin_upgrade_message']);
        } else {
          $data['plugin_upgrade_message'] = '';
        }
      ]]></add>
    </operation>

    <!-- Removes away this modification from the plugin -->
    <!-- as this is only used primarily for debugging -->
    <!-- This is also due to incompatibility with external plugins -->
    <!-- https://github.com/facebookincubator/Facebook-For-OpenCart/issues/52 -->
<!--     <operation>
      <search><![CDATA[$url = '';]]></search>
      <add position="after"><![CDATA[
        if (isset($this->request->get['debug_facebook_sync_error'])) {
          $url .= '&debug_facebook_sync_error=1';
        }
      ]]></add>
    </operation> -->
  </file>

  <file path="admin/view/template/catalog/product_list.tpl">
    <operation>
      <search><![CDATA[    <?php if ($error_warning) { ?>]]></search>
      <add position="before"><![CDATA[
        <?php if (isset($error_facebook_sync) && !!($error_facebook_sync)) {?>
        <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> <?= $error_facebook_sync; ?>
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        <?php } ?>
        <?php if (isset($error_facebook_delete) && !!($error_facebook_delete)) {?>
        <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> <?= $error_facebook_delete; ?>
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        <?php } ?>
        <?php if (isset($plugin_upgrade_message) && !!($plugin_upgrade_message)) {?>
        <div class="alert alert-info"><i class="fa fa-exclamation-circle"></i> <?= $plugin_upgrade_message; ?>
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        <?php } ?>
      ]]></add>
    </operation>
  </file>

  <file path="admin/language/*/catalog/product.php">
    <operation>
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        $_['text_warning_facebook_sync']           = 'Warning: Encountered problem updating product(s) to Facebook. Please retry again. Check the error log file for more details';
        $_['text_warning_facebook_delete']           = 'Warning: Encountered problem deleting product(s) to Facebook. Check the error log file for more details.';
        $_['text_warning_facebook_access_token_problem'] = 'Warning: There is a problem with your Facebook access token. Please go to Facebook Ads Extension to refresh the access token.';
        $_['text_warning_facebook_fae_install_problem'] = 'Warning: There is a problem with your Facebook Ads Extension installation. Please go to Facebook Ads Extension to view more details.';
      ]]></add>
    </operation>
  </file>

  <file path="catalog/controller/api/order.php">
    <!-- This is to handle for Adding of new orders -->
    <operation>
      <search><![CDATA[$this->model_checkout_order->addOrderHistory($json['order_id'], $order_status_id);]]></search>
      <add position="after"><![CDATA[
        $products = $this->cart->getProducts();
        if ($products && sizeof($products)) {
          $this->facebookcommonutils = new FacebookCommonUtils();
          $this->facebookcommonutils->updateProductAvailability(
            $this->registry,
            $products);
        }
      ]]></add>
    </operation>

    <!-- This is to handle for Editing of existing orders. -->
    <!-- There may be cases where the user removes existing products -->
    <!-- and adds in new products. In these cases, we need to -->
    <!-- get the full list of affected products and update the -->
    <!-- availability for them -->
    <!-- This gets the products pre edit -->
    <operation>
      <search><![CDATA[$this->model_checkout_order->editOrder($order_id, $order_data);]]></search>
      <add position="before"><![CDATA[
        $products_pre_edit = $this->model_checkout_order->getOrderProductIds($order_id);
      ]]></add>
    </operation>

    <!-- This gets the products post edit and merges the pre and post lists together -->
    <!-- for product availability update -->
    <operation>
      <search><![CDATA[$this->model_checkout_order->addOrderHistory($order_id, $order_status_id);]]></search>
      <add position="after"><![CDATA[
        $products_post_edit = $this->cart->getProducts();
        $this->facebookcommonutils = new FacebookCommonUtils();
        $products_for_availabilty_update =
          array_merge($products_pre_edit, $products_post_edit);
        $this->facebookcommonutils->updateProductAvailability(
          $this->registry,
          $products_for_availabilty_update);
      ]]></add>
    </operation>
  </file>

  <!-- This function retrieves out the product_ids for an order_id -->
  <file path="catalog/model/checkout/order.php">
    <operation>
      <search><![CDATA[class ModelCheckoutOrder extends Model]]></search>
      <add position="after"><![CDATA[
          public function getOrderProductIds($order_id) {
            $sql = "SELECT product_id FROM " . DB_PREFIX . "order_product " .
              "WHERE order_id = '" . (int)$order_id . "'";
            return $this->db->query($sql)->rows;
          }
      ]]></add>
    </operation>
  </file>

  <!-- Firing the pixel init and event code -->
  <!-- The facebook_pixel_event_params_FAE is retrieved from the request->post -->
  <file path="catalog/controller/common/header.php">
    <operation>
      <search><![CDATA[public function index()]]></search>
      <add position="after"><![CDATA[
        $data['facebook_pixel_id_FAE'] =
          $this->fbevents['facebook_pixel_id_FAE'];
        $data['facebook_pixel_pii_FAE'] =
          $this->fbevents['facebook_pixel_pii_FAE'];
        $data['facebook_pixel_params_FAE'] =
          $this->fbevents['facebook_pixel_params_FAE'];
        $data['facebook_pixel_params_FAE'] =
          $this->fbevents['facebook_pixel_params_FAE'];
        $data['facebook_pixel_event_params_FAE'] =
          $this->fbevents['facebook_pixel_event_params_FAE'];
        $data['facebook_enable_cookie_bar'] =
          $this->fbevents['facebook_enable_cookie_bar'];

        // remove away the facebook_pixel_event_params_FAE in session data
        // to avoid duplicate firing after the 1st fire
        unset($this->session->data['facebook_pixel_event_params_FAE']);
      ]]></add>
    </operation>
  </file>

  <!-- The actual firing of the pixel code is done in the header file -->
  <!-- The injection for the header file is based on locating -->
  <!-- the tag </head> which should give the lowest chance to break -->
  <!-- with custom plugins -->
  <file path="catalog/view/theme/*/template/common/header.tpl">
    <operation>
      <search><![CDATA[</head>]]></search>
      <add position="before"><![CDATA[
        <script type="text/javascript">
          function facebook_loadScript(url, callback) {
            var script = document.createElement("script");
            script.type = "text/javascript";
            if(script.readyState) {  // only required for IE <9
              script.onreadystatechange = function() {
                if (script.readyState === "loaded" || script.readyState === "complete") {
                  script.onreadystatechange = null;
                  if (callback) {
                    callback();
                  }
                }
              };
            } else {  //Others
              if (callback) {
                script.onload = callback;
              }
            }

            script.src = url;
            document.getElementsByTagName("head")[0].appendChild(script);
          }
        </script>

        <script type="text/javascript">
          (function() {
            var enableCookieBar = '<?= $facebook_enable_cookie_bar ?>';
            if (enableCookieBar === 'true') {
              facebook_loadScript("catalog/view/javascript/facebook/cookieconsent.min.js");

              // loading the css file
              var css = document.createElement("link");
              css.setAttribute("rel", "stylesheet");
              css.setAttribute("type", "text/css");
              css.setAttribute(
                "href",
                "catalog/view/theme/css/facebook/cookieconsent.min.css");
              document.getElementsByTagName("head")[0].appendChild(css);

              window.addEventListener("load", function(){
                function setConsent() {
                  fbq(
                    'consent',
                    this.hasConsented() ? 'grant' : 'revoke'
                  );
                }
                window.cookieconsent.initialise({
                  palette: {
                    popup: {
                      background: '#237afc'
                    },
                    button: {
                      background: '#fff',
                      text: '#237afc'
                    }
                  },
                  cookie: {
                    name: fbq.consentCookieName
                  },
                  type: 'opt-out',
                  showLink: false,
                  content: {
                    dismiss: 'Agree',
                    deny: 'Opt Out',
                    header: 'Our Site Uses Cookies',
                    message: 'By clicking Agree, you agree to our <a class="cc-link" href="https://www.facebook.com/legal/terms/update" target="_blank">terms of service</a>, <a class="cc-link" href="https://www.facebook.com/policies/" target="_blank">privacy policy</a> and <a class="cc-link" href="https://www.facebook.com/policies/cookies/" target="_blank">cookies policy</a>.'
                  },
                  layout: 'basic-header',
                  location: true,
                  revokable: true,
                  onInitialise: setConsent,
                  onStatusChange: setConsent,
                  onRevokeChoice: setConsent
                }, function (popup) {
                  // If this isn't open, we know that we can use cookies.
                  if (!popup.getStatus() && !popup.options.enabled) {
                    popup.setStatus(cookieconsent.status.dismiss);
                  }
                });
              });
            }
          })();
        </script>

        <script type="text/javascript">
          (function() {
            !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
            n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
            n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
            t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
            document,'script','https://connect.facebook.net/en_US/fbevents.js');

            var enableCookieBar = '<?= $facebook_enable_cookie_bar ?>';
            if (enableCookieBar === 'true') {
              fbq.consentCookieName = 'fb_cookieconsent_status';

              (function() {
                function getCookie(t){var i=("; "+document.cookie).split("; "+t+"=");if(2==i.length)return i.pop().split(";").shift()}
                var consentValue = getCookie(fbq.consentCookieName);
                fbq('consent', consentValue === 'dismiss' ? 'grant' : 'revoke');
              })();
            }

            <?php if ($facebook_pixel_id_FAE) { ?>
              facebook_loadScript(
                "catalog/view/javascript/facebook/facebook_pixel.js",
                function() {
                  var params = <?= $facebook_pixel_params_FAE ?>;
                  _facebookAdsExtension.facebookPixel.init(
                    '<?= $facebook_pixel_id_FAE ?>',
                    <?= $facebook_pixel_pii_FAE ?>,
                    params);
                  <?php if ($facebook_pixel_event_params_FAE) { ?>
                    _facebookAdsExtension.facebookPixel.firePixel(
                      JSON.parse('<?= $facebook_pixel_event_params_FAE ?>'));
                  <?php } ?>
                });
            <?php } ?>
          })();
        </script>
      ]]></add>
    </operation>
  </file>

  <!-- AddToCart at product details page -->
  <!-- Uses jQuery to add new listener to button-cart.click -->
  <!-- The code injection is set to match <?php echo $footer; ?> -->
  <!-- which will reduce the chance of breakage with custom plugins -->
  <file path="catalog/view/theme/*/template/product/product.tpl">
    <operation>
      <search><![CDATA[<?php echo $footer; ?>]]></search>
      <add position="after"><![CDATA[
        <input type='hidden' id='fbProductID' value='<?= $product_id ?>' />
      ]]></add>
    </operation>
  </file>

  <!-- Facebook pixel Purchase code -->
  <!-- This will prepare the params for Purchase pixel at Thank you page -->
  <file path="catalog/controller/checkout/success.php">
    <operation>
      <search><![CDATA[public function index()]]></search>
      <add position="after"><![CDATA[
        $this->facebookcommonutils = new FacebookCommonUtils();
        $products = $this->cart->getProducts();
        if (sizeof($products)) {
          // update the product availability on Facebook
          $this->facebookcommonutils->updateProductAvailability(
            $this->registry,
            $products);
        }
      ]]></add>
    </operation>
  </file>
  <!-- End Facebook pixel Purchase code -->

  <!-- The actual firing of the pixel code is done in the header file -->
  <!-- The injection for the header file is based on locating -->
  <!-- the tag </head> which should give the lowest chance to break -->
  <!-- with custom plugins -->
  <file path="catalog/view/theme/*/template/common/header.twig">
    <operation>
      <search><![CDATA[</head>]]></search>
      <add position="before"><![CDATA[
        <script type="text/javascript">
          function facebook_loadScript(url, callback) {
            var script = document.createElement("script");
            script.type = "text/javascript";
            if(script.readyState) {  // only required for IE <9
              script.onreadystatechange = function() {
                if (script.readyState === "loaded" || script.readyState === "complete") {
                  script.onreadystatechange = null;
                  if (callback) {
                    callback();
                  }
                }
              };
            } else {  //Others
              if (callback) {
                script.onload = callback;
              }
            }

            script.src = url;
            document.getElementsByTagName("head")[0].appendChild(script);
          }
        </script>

        <script type="text/javascript">
          (function() {
            var enableCookieBar = '{{ facebook_enable_cookie_bar }}';
            if (enableCookieBar === 'true') {
              facebook_loadScript("catalog/view/javascript/facebook/cookieconsent.min.js");

              // loading the css file
              var css = document.createElement("link");
              css.setAttribute("rel", "stylesheet");
              css.setAttribute("type", "text/css");
              css.setAttribute(
                "href",
                "catalog/view/theme/css/facebook/cookieconsent.min.css");
              document.getElementsByTagName("head")[0].appendChild(css);

              window.addEventListener("load", function(){
                function setConsent() {
                  fbq(
                    'consent',
                    this.hasConsented() ? 'grant' : 'revoke'
                  );
                }
                window.cookieconsent.initialise({
                  palette: {
                    popup: {
                      background: '#237afc'
                    },
                    button: {
                      background: '#fff',
                      text: '#237afc'
                    }
                  },
                  cookie: {
                    name: fbq.consentCookieName
                  },
                  type: 'opt-out',
                  showLink: false,
                  content: {
                    dismiss: 'Agree',
                    deny: 'Opt Out',
                    header: 'Our Site Uses Cookies',
                    message: 'By clicking Agree, you agree to our <a class="cc-link" href="https://www.facebook.com/legal/terms/update" target="_blank">terms of service</a>, <a class="cc-link" href="https://www.facebook.com/policies/" target="_blank">privacy policy</a> and <a class="cc-link" href="https://www.facebook.com/policies/cookies/" target="_blank">cookies policy</a>.'
                  },
                  layout: 'basic-header',
                  location: true,
                  revokable: true,
                  onInitialise: setConsent,
                  onStatusChange: setConsent,
                  onRevokeChoice: setConsent
                }, function (popup) {
                  // If this isn't open, we know that we can use cookies.
                  if (!popup.getStatus() && !popup.options.enabled) {
                    popup.setStatus(cookieconsent.status.dismiss);
                  }
                });
              });
            }
          })();
        </script>

        <script type="text/javascript">
          (function() {
            !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
            n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
            n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
            t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
            document,'script','https://connect.facebook.net/en_US/fbevents.js');

            var enableCookieBar = '{{ facebook_enable_cookie_bar }}';
            if (enableCookieBar === 'true') {
              fbq.consentCookieName = 'fb_cookieconsent_status';

              (function() {
                function getCookie(t){var i=("; "+document.cookie).split("; "+t+"=");if(2==i.length)return i.pop().split(";").shift()}
                var consentValue = getCookie(fbq.consentCookieName);
                fbq('consent', consentValue === 'dismiss' ? 'grant' : 'revoke');
              })();
            }

            {% if facebook_pixel_id_FAE %}
              facebook_loadScript(
                "catalog/view/javascript/facebook/facebook_pixel.js",
                function() {
                  var params = {{ facebook_pixel_params_FAE }};
                  _facebookAdsExtension.facebookPixel.init(
                    '{{ facebook_pixel_id_FAE }}',
                    {{ facebook_pixel_pii_FAE }},
                    params);
                  {% if facebook_pixel_event_params_FAE %}
                    _facebookAdsExtension.facebookPixel.firePixel(
                      JSON.parse('{{facebook_pixel_event_params_FAE }}'));
                  {% endif %}
                });
            {% endif %}
          })();
        </script>
      ]]></add>
    </operation>
  </file>

  <!-- AddToCart at product details page -->
  <!-- Uses jQuery to add new listener to button-cart.click -->
  <!-- The code injection is set to match <?php echo $footer; ?> -->
  <!-- which will reduce the chance of breakage with custom plugins -->
  <file path="catalog/view/theme/*/template/product/product.twig">
    <operation>
      <search><![CDATA[{{ footer }}]]></search>
      <add position="after"><![CDATA[
        <input type='hidden' id='fbProductID' value='{{ product_id }}' />
      ]]></add>
    </operation>
  </file>

  <file path="admin/view/template/common/dashboard.twig">
    <operation>
      <search><![CDATA[<div class="container-fluid">{% if error_install %}]]></search>
      <add position="before"><![CDATA[
        {% if error_facebook_sync %}
        <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> {{ error_facebook_sync }}
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        {% endif %}
        {% if plugin_upgrade_message %}
        <div class="alert alert-info"><i class="fa fa-exclamation-circle"></i> {{ plugin_upgrade_message }}
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        {% endif %}        
      ]]></add>
    </operation>
  </file>

  <file path="admin/view/template/catalog/product_list.twig">
    <operation>
      <search><![CDATA[<div class="container-fluid">{% if error_warning %}]]></search>
      <add position="before"><![CDATA[
        {% if error_facebook_sync %}
        <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> {{ error_facebook_sync }}
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        {% endif %}
        {% if error_facebook_delete %}
        <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> {{ error_facebook_delete }}
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        {% endif %}
        {% if plugin_upgrade_message %}
        <div class="alert alert-info"><i class="fa fa-exclamation-circle"></i> {{ plugin_upgrade_message }}
          <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
        {% endif %}        
      ]]></add>
    </operation>
  </file>

  <file path="admin/language/*/common/dashboard.php">
    <operation>
      <search><![CDATA[<?php]]></search>
      <add position="after"><![CDATA[
        $_['text_warning_facebook_sync']           = 'Warning: Encountered problem updating product(s) to Facebook. Please retry again. Check the error log file for more details';
        $_['text_warning_facebook_delete']           = 'Warning: Encountered problem deleting product(s) to Facebook. Check the error log file for more details.';
        $_['text_warning_facebook_access_token_problem'] = 'Warning: There is a problem with your Facebook access token. Please go to Facebook Ads Extension to refresh the access token.';
        $_['text_warning_facebook_fae_install_problem'] = 'Warning: There is a problem with your Facebook Ads Extension installation. Please go to Facebook Ads Extension to view more details.';
      ]]></add>
    </operation>
  </file>

  <file path="system/config/catalog.php">
    <operation>
      <!-- this is to cater for OpenCart v2.2.0.0 and higher -->
      <search><![CDATA[$_['action_event'] = array(]]></search>
      <add position="before"><![CDATA[
        // added in defensive checks to ensure the
        // controller class is available and accessible
        if (is_file(
          DIR_APPLICATION . '/controller/extension/facebookpageshopcheckoutredirect.php')) {
          array_push($_['action_pre_action'], 'extension/facebookpageshopcheckoutredirect');
        }
        if (is_file(
          DIR_APPLICATION . '/controller/extension/facebookeventparameters.php')) {
          // preparing the data for pixel events to be fired
          array_push($_['action_pre_action'], 'extension/facebookeventparameters');
        }
      ]]></add>
    </operation>
  </file>

  <file path="catalog/controller/common/maintenance.php">
    <operation>
      <!-- this is to cater for versions below OpenCart v2.2.0.0 -->
      <search><![CDATA[public function index() {]]></search>
      <add position="after"><![CDATA[
        // added in defensive checks to ensure the
        // controller class is available and accessible
        if (is_file(
          DIR_APPLICATION . '/controller/extension/facebookpageshopcheckoutredirect.php')) {
          $target = 'facebook/facebookproduct/directcheckout';
          if (isset($this->request->get['route'])
            && substr((string)$this->request->get['route'], 0, strlen($target)) == $target) {
            return new Action('extension/facebookpageshopcheckoutredirect');
          }
        }

        if (is_file(
          DIR_APPLICATION . '/controller/extension/facebookeventparameters.php')) {
          // preparing the data for pixel events to be fired
          $this->load->controller('extension/facebookeventparameters');
        }
      ]]></add>
    </operation>
  </file>

  <!-- Insert Messenger customer chat -->
  <file path="catalog/view/theme/*/template/common/footer.tpl">
    <operation>
      <search><![CDATA[</footer>]]></search>
      <add position="before"><![CDATA[

        <?php if ($facebook_messenger_enabled_FAE == 'true') { ?>
        <!-- Facebook JSSDK -->
        <script>
          window.fbAsyncInit = function() {
            FB.init({
              appId            : '',
              autoLogAppEvents : true,
              xfbml            : true,
              version          : '<?= $facebook_jssdk_version_FAE ?>'
            });
          };

          (function(d, s, id){
             var js, fjs = d.getElementsByTagName(s)[0];
             if (d.getElementById(id)) {return;}
             js = d.createElement(s); js.id = id;
             js.src = "https://connect.facebook.net/en_US/sdk.js";
             fjs.parentNode.insertBefore(js, fjs);
           }(document, 'script', 'facebook-jssdk'));
        </script>
        <div
          class="fb-customerchat"
          attribution="fbe_opencart"
          page_id="<?= $facebook_page_id_FAE ?>"
        />
        <?php } ?>
      ]]></add>
    </operation>
  </file>


  <!-- Firing the pixel init and event code -->
  <!-- The facebook_pixel_event_params_FAE is retrieved from the request->post -->
  <file path="catalog/controller/common/footer.php">
    <operation>
      <search><![CDATA[public function index()]]></search>
      <add position="after"><![CDATA[
        $data['facebook_page_id_FAE'] = $this->config->get('facebook_page_id');
        $data['facebook_jssdk_version_FAE'] = $this->config->get('facebook_jssdk_version');
        $data['facebook_messenger_enabled_FAE'] = $this->config->get('facebook_messenger_activated');
      ]]></add>
    </operation>
  </file>

  <!-- Insert Messenger customer chat -->
  <file path="catalog/view/theme/*/template/common/footer.twig">
    <operation>
      <search><![CDATA[</footer>]]></search>
      <add position="before"><![CDATA[

        {% if facebook_messenger_enabled_FAE == 'true' %}
        <!-- Facebook JSSDK -->
        <script>
          window.fbAsyncInit = function() {
            FB.init({
              appId            : '',
              autoLogAppEvents : true,
              xfbml            : true,
              version          : '{{ facebook_jssdk_version_FAE }}'
            });
          };

          (function(d, s, id){
             var js, fjs = d.getElementsByTagName(s)[0];
             if (d.getElementById(id)) {return;}
             js = d.createElement(s); js.id = id;
             js.src = "https://connect.facebook.net/en_US/sdk.js";
             fjs.parentNode.insertBefore(js, fjs);
           }(document, 'script', 'facebook-jssdk'));
        </script>
        <div
          class="fb-customerchat"
          attribution="fbe_opencart"
          page_id="{{ facebook_page_id_FAE }}"
        />
        {% endif %}
      ]]></add>
    </operation>
  </file>


  <file path="catalog/controller/common/seo_url.php">
    <operation>
      <!-- this is to cater for versions below OpenCart v2.2.0.0 -->
      <search><![CDATA[if (!isset($this->request->get['route'])) {]]></search>
      <add position="before"><![CDATA[
        // added in defensive checks to ensure the
        // controller class is available and accessible
        if (is_file(
          DIR_APPLICATION . '/controller/extension/facebookeventparameters.php')) {
          if (!isset($this->request->get['route'])) {
            if (isset($this->request->get['product_id'])) {
              $this->request->get['route'] = 'product/product';
            } elseif (isset($this->request->get['path'])) {
              $this->request->get['route'] = 'product/category';
            } elseif (isset($this->request->get['manufacturer_id'])) {
              $this->request->get['route'] = 'product/manufacturer/info';
            } elseif (isset($this->request->get['information_id'])) {
              $this->request->get['route'] = 'information/information';
            }
            // preparing the data for pixel events to be fired
            $this->load->controller('extension/facebookeventparameters');
          }
        }
      ]]></add>
    </operation>
  </file>
</modification>
